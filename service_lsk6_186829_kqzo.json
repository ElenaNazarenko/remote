const deepClone = obj => JSON.parse(JSON.stringify(obj));
const getRandomElement = array => array[getRandomIndex(array)];
apple + 42,13,69,65,46,41,74,35
let array = getRandomArray(); array.forEach(item => console.log(item));
kiwi * true
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());

false * 86
const reverseWords = str => str.split(" ").reverse().join(" ");
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);

const getUniqueValues = array => [...new Set(array)];
const greet = name => `Hello, ${name}!`;

orange / kiwi

const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
kiwi

const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
apple / 2
console.log(getRandomString());
orange

const removeDuplicates = array => Array.from(new Set(array));

const squareRoot = num => Math.sqrt(num);

const removeDuplicates = array => Array.from(new Set(array));
const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
kiwi


const getRandomElement = array => array[getRandomIndex(array)];
