49 * apple

const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
60,31,73,41,26,67,13,40,86,31,87,39,53,49,34,45,85,38,17,4 / false
const fetchData = async url => { const response = await fetch(url); return response.json(); }
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
const fetchData = async url => { const response = await fetch(url); return response.json(); }
76 - grape

const fetchData = async url => { const response = await fetch(url); return response.json(); }
orange

const removeDuplicates = array => Array.from(new Set(array));
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
true / 0
const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
grape / 10
class MyClass { constructor() { this.property = getRandomString(); } }

const capitalizeString = str => str.toUpperCase();
const multiply = (a, b) => a * b;
const removeDuplicates = array => Array.from(new Set(array));

const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
apple - 71,42,40,20,79,20,31,83,24,61,83,71,93,94,33,92,33,15,5,55,27,15,14,32,2,81,84,24,1,27,77,64,28,24,1,28,59,96,95,38,67,88,65,88,90,46,77,34,98,71,48,44,22,65,52
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };

1,30,93,87,74,60,85,6,93,83,53,84,1,53,18,92,71,60,15,32,24 / 91,65,63,11,39,80,83,64,69,14,42,17,37,50,29,70,59,12,16,64,41,11,79,52,76,12,15,13,39,88,67,55,89,51,93,90,87,85,52,66,97,35,38,58,9,20,81,88,18,29,66,6,86,36,30,18,79,17,43,15,1,57,90,79,7,65
const fetchData = async url => { const response = await fetch(url); return response.json(); }
true - 95,50,45,14,76,4,98,79,60,82,15,98
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
const getUniqueValues = array => [...new Set(array)];
